1. accounts app: 
/register 
/login
/logout 
// Authorization & Authentication
// when saving the password it should be hashed not encrypted

2. schedules app:

/schedule -> get (all schedules)
/schedule -> post  (adding new schedule)
/schedule -> put (edit schedule)
/schedule -> delete  (delete schedule)

3. admin app:
/admin/reports -> get (generating reports )
/admin/course -> post  (adding new course) We may check if the room is empty, and adding room table
/admin/course -> put (edit course) We may check if the room is empty
/admin/course -> delete  (delete course)

4. courses app : 
/course/search -> get 
/course -> get (all courses)
/course/id -> get (view course details) 
/course/analytics -> get 

5. students app:
/student -> get (all students)
/student/id -> get (view student details)
/student -> put (edit student)
/student -> delete  (delete student)
/student/course -> put (adding course to student's schedule, display just the courses that he completed it's  prerequisites)
/student/schedule -> get   (view the student's current course schedule)
/student/notifications -> get (display notifications, reminders and deadlines)

Additional work:
Room table :
room_number
capacity
screenAvailability
1..* courses 

reset password (one time link)

Notes for project:
1. Should be change the login, logout and register to use built-in modules in django ?
2. Create the admin using django command, and login to it using the route (/admin)
3. Creating admin model and add the content that he can see (eg. students, courses ...)








All models:

from django.db import models
from schedules.models import CourseSchedule

class Course(models.Model):
    course_code = models.CharField(max_length=10, unique=True)
    course_name = models.CharField(max_length=100)
    description = models.TextField()
    instructor_name = models.CharField(max_length=100)
    schedule = models.ForeignKey(CourseSchedule, on_delete=models.CASCADE, null=True, blank=True)
    prerequisites = models.ForeignKey('self', null=True, blank=True, on_delete=models.CASCADE)
    capacity = models.IntegerField()

    def __str__(self):
        return self.course_name


from django.db import models

class CourseSchedule(models.Model):
    schedule_id = models.AutoField(primary_key=True)
    days = models.CharField(max_length=10)
    start_time = models.TimeField()
    end_time = models.TimeField()
    room_number = models.CharField(max_length=20)

    def __str__(self):
        return f"Schedule {self.schedule_id} ({self.days} {self.start_time}-{self.end_time})"


from django.db import models
from courses.models import Course

class Student(models.Model):
    student_id = models.CharField(primary_key=True, max_length=20)
    student_name = models.CharField(max_length=100)
    email = models.EmailField(unique=True)
    password = models.CharField(max_length=100)

    def __str__(self):
        return self.student_name

class StudentRegistration(models.Model):
    registration_id = models.AutoField(primary_key=True)
    student = models.ForeignKey(Student, on_delete=models.CASCADE)
    course = models.ForeignKey(Course, on_delete=models.CASCADE)

    def __str__(self):
        return f"Student {self.student.student_name} registered for {self.course.course_name}"
